# Example queries for a simple movie app.

# @auth() directives control who can call each operation.
# Anyone should be able to list all movies, so the auth level is set to PUBLIC
# query ListMovies @auth(level: PUBLIC) {
#   movies {
#     id
#     title
#     imageUrl
#     genre
#   }
# }

query ListNewsletterSignIps @auth(level: PUBLIC) {
  newsletters {
    email
  }
}

query GetNewsletterByEmail($email: String) @auth(level: PUBLIC) {
  newsletter(first: { where: { email: { eq: $email } } }) {
    email
  }
}

query ListUsers @auth(level: PUBLIC) {
  users {
    id
    email
    firstName
    lastName
    orginizationId
    roles
  }
}

query ListOrgs @auth(level: PUBLIC) {
  orginizations {
    id
    name
    status
    users_on_orginization {
      id
    }
  }
}

query GetUserById($id: String!) @auth(level: PUBLIC) {
  user(id: $id) {
    id
    email
    firstName
    lastName
    orginizationId
    roles
  }
}

# # Logged in users can list all their reviews and movie titles associated with the review
# # Since the query uses the uid of the current authenticated user, we set auth level to USER
# query ListUserReviews @auth(level: USER) {
#   user(key: { id_expr: "auth.uid" }) {
#     id
#     username
#     # <field>_on_<foreign_key_field> makes it easy to grab info from another table
#     # Here, we use it to grab all the reviews written by the user.
#     reviews: reviews_on_user {
#       rating
#       reviewDate
#       reviewText
#       movie {
#         id
#         title
#       }
#     }
#   }
# }

# # Get movie by id
# query GetUserById($id: UUID!) @auth(level: PUBLIC) {
#   user(id: $id) {
#     id
#     firstName
#     lastName
#     profilePictureUrl
#     memberships {
#       user
#       project
#       role
#     }
#     roles
#     projectMemberships_on_user {
#       user
#       project
#       role
#     }
#   }
# }

# # Search for movies, actors, and reviews
# query SearchMovie($titleInput: String, $genre: String) @auth(level: PUBLIC) {
#   movies(
#     where: {
#       _and: [{ genre: { eq: $genre } }, { title: { contains: $titleInput } }]
#     }
#   ) {
#     id
#     title
#     genre
#     imageUrl
#   }
# }
