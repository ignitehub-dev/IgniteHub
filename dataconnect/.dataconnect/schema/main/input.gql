"""
✨ `Newsletter_KeyOutput` returns the primary key fields of table type `Newsletter`.

It has the same format as `Newsletter_Key`, but is only used as mutation return value.
"""
scalar Newsletter_KeyOutput
"""
✨ `Project_KeyOutput` returns the primary key fields of table type `Project`.

It has the same format as `Project_Key`, but is only used as mutation return value.
"""
scalar Project_KeyOutput
"""
✨ `ProjectMembership_KeyOutput` returns the primary key fields of table type `ProjectMembership`.

It has the same format as `ProjectMembership_Key`, but is only used as mutation return value.
"""
scalar ProjectMembership_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ Generated data input type for table 'Newsletter'. It includes all necessary fields for creating or upserting rows into table.
"""
input Newsletter_Data {
  """
  ✨ Generated from Field `Newsletter`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Newsletter`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Newsletter`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `Newsletter`.`email` of type `String!`)
  """
  email_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Newsletter'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Newsletter_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Newsletter_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Newsletter_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Newsletter_Filter!]
  """
  ✨ Generated from Field `Newsletter`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Newsletter`.`email` of type `String!`
  """
  email: String_Filter
}
"""
✨ Generated first-row input type for table 'Newsletter'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Newsletter_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Newsletter_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Newsletter_Filter
}
"""
✨ Generated key input type for table 'Newsletter'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Newsletter_Key {
  """
  ✨ Generated from Field `Newsletter`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Newsletter`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Newsletter'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Newsletter_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Newsletter_Filter
}
"""
✨ Generated order input type for table 'Newsletter'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Newsletter_Order {
  """
  ✨ Generated from Field `Newsletter`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Newsletter`.`email` of type `String!`
  """
  email: OrderDirection
}
"""
✨ Generated data input type for table 'Project'. It includes all necessary fields for creating or upserting rows into table.
"""
input Project_Data {
  """
  ✨ Generated from Field `Project`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Project`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Project`.`membershipsId` of type `UUID!`
  """
  membershipsId: UUID
  """
  ✨ `_expr` server value variant of `membershipsId` (✨ Generated from Field `Project`.`membershipsId` of type `UUID!`)
  """
  membershipsId_expr: UUID_Expr
  """
  ✨ Generated from Field `Project`.`memberships` of type `ProjectMembership!`
  """
  memberships: ProjectMembership_Key
  """
  ✨ Generated from Field `Project`.`createdAt` of type `Date!`
  """
  createdAt: Date
  """
  ✨ `_date` server value variant of `createdAt` (✨ Generated from Field `Project`.`createdAt` of type `Date!`)
  """
  createdAt_date: Date_Relative
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Project`.`createdAt` of type `Date!`)
  """
  createdAt_expr: Date_Expr
  """
  ✨ Generated from Field `Project`.`hubIntegrations` of type `String`
  """
  hubIntegrations: String
  """
  ✨ `_expr` server value variant of `hubIntegrations` (✨ Generated from Field `Project`.`hubIntegrations` of type `String`)
  """
  hubIntegrations_expr: String_Expr
  """
  ✨ Generated from Field `Project`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Project`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Project`.`settings` of type `String`
  """
  settings: String
  """
  ✨ `_expr` server value variant of `settings` (✨ Generated from Field `Project`.`settings` of type `String`)
  """
  settings_expr: String_Expr
  """
  ✨ Generated from Field `Project`.`status` of type `String`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `Project`.`status` of type `String`)
  """
  status_expr: String_Expr
  """
  ✨ Generated from Field `Project`.`updatedAt` of type `Date`
  """
  updatedAt: Date
  """
  ✨ `_date` server value variant of `updatedAt` (✨ Generated from Field `Project`.`updatedAt` of type `Date`)
  """
  updatedAt_date: Date_Relative
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Project`.`updatedAt` of type `Date`)
  """
  updatedAt_expr: Date_Expr
}
"""
✨ Generated filter input type for table 'Project'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Project_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Project_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Project_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Project_Filter!]
  """
  ✨ Generated from Field `Project`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Project`.`membershipsId` of type `UUID!`
  """
  membershipsId: UUID_Filter
  """
  ✨ Generated from Field `Project`.`memberships` of type `ProjectMembership!`
  """
  memberships: ProjectMembership_Filter
  """
  ✨ Generated from Field `Project`.`createdAt` of type `Date!`
  """
  createdAt: Date_Filter
  """
  ✨ Generated from Field `Project`.`hubIntegrations` of type `String`
  """
  hubIntegrations: String_Filter
  """
  ✨ Generated from Field `Project`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Project`.`settings` of type `String`
  """
  settings: String_Filter
  """
  ✨ Generated from Field `Project`.`status` of type `String`
  """
  status: String_Filter
  """
  ✨ Generated from Field `Project`.`updatedAt` of type `Date`
  """
  updatedAt: Date_Filter
  """
  ✨ Generated from Field `Project`.`projectMemberships_on_project` of type `[ProjectMembership!]!`
  """
  projectMemberships_on_project: ProjectMembership_ListFilter
}
"""
✨ Generated first-row input type for table 'Project'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Project_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Project_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Project_Filter
}
"""
✨ Generated key input type for table 'Project'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Project_Key {
  """
  ✨ Generated from Field `Project`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Project`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Project'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Project_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Project_Filter
}
"""
✨ Generated order input type for table 'Project'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Project_Order {
  """
  ✨ Generated from Field `Project`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Project`.`membershipsId` of type `UUID!`
  """
  membershipsId: OrderDirection
  """
  ✨ Generated from Field `Project`.`memberships` of type `ProjectMembership!`
  """
  memberships: ProjectMembership_Order
  """
  ✨ Generated from Field `Project`.`createdAt` of type `Date!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Project`.`hubIntegrations` of type `String`
  """
  hubIntegrations: OrderDirection
  """
  ✨ Generated from Field `Project`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Project`.`settings` of type `String`
  """
  settings: OrderDirection
  """
  ✨ Generated from Field `Project`.`status` of type `String`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `Project`.`updatedAt` of type `Date`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'ProjectMembership'. It includes all necessary fields for creating or upserting rows into table.
"""
input ProjectMembership_Data {
  """
  ✨ Generated from Field `ProjectMembership`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ProjectMembership`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `ProjectMembership`.`projectId` of type `UUID!`
  """
  projectId: UUID
  """
  ✨ `_expr` server value variant of `projectId` (✨ Generated from Field `ProjectMembership`.`projectId` of type `UUID!`)
  """
  projectId_expr: UUID_Expr
  """
  ✨ Generated from Field `ProjectMembership`.`userId` of type `String!`
  """
  userId: String
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `ProjectMembership`.`userId` of type `String!`)
  """
  userId_expr: String_Expr
  """
  ✨ Generated from Field `ProjectMembership`.`project` of type `Project!`
  """
  project: Project_Key
  """
  ✨ Generated from Field `ProjectMembership`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `ProjectMembership`.`role` of type `String!`
  """
  role: String
  """
  ✨ `_expr` server value variant of `role` (✨ Generated from Field `ProjectMembership`.`role` of type `String!`)
  """
  role_expr: String_Expr
}
"""
✨ Generated filter input type for table 'ProjectMembership'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ProjectMembership_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [ProjectMembership_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: ProjectMembership_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [ProjectMembership_Filter!]
  """
  ✨ Generated from Field `ProjectMembership`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `ProjectMembership`.`projectId` of type `UUID!`
  """
  projectId: UUID_Filter
  """
  ✨ Generated from Field `ProjectMembership`.`userId` of type `String!`
  """
  userId: String_Filter
  """
  ✨ Generated from Field `ProjectMembership`.`project` of type `Project!`
  """
  project: Project_Filter
  """
  ✨ Generated from Field `ProjectMembership`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `ProjectMembership`.`role` of type `String!`
  """
  role: String_Filter
  """
  ✨ Generated from Field `ProjectMembership`.`projects_on_memberships` of type `[Project!]!`
  """
  projects_on_memberships: Project_ListFilter
  """
  ✨ Generated from Field `ProjectMembership`.`users_on_memberships` of type `[User!]!`
  """
  users_on_memberships: User_ListFilter
}
"""
✨ Generated first-row input type for table 'ProjectMembership'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input ProjectMembership_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [ProjectMembership_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: ProjectMembership_Filter
}
"""
✨ Generated key input type for table 'ProjectMembership'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input ProjectMembership_Key {
  """
  ✨ Generated from Field `ProjectMembership`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ProjectMembership`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'ProjectMembership'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input ProjectMembership_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: ProjectMembership_Filter
}
"""
✨ Generated order input type for table 'ProjectMembership'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input ProjectMembership_Order {
  """
  ✨ Generated from Field `ProjectMembership`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `ProjectMembership`.`projectId` of type `UUID!`
  """
  projectId: OrderDirection
  """
  ✨ Generated from Field `ProjectMembership`.`userId` of type `String!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `ProjectMembership`.`project` of type `Project!`
  """
  project: Project_Order
  """
  ✨ Generated from Field `ProjectMembership`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `ProjectMembership`.`role` of type `String!`
  """
  role: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `String!`)
  """
  id_expr: String_Expr
  """
  ✨ Generated from Field `User`.`membershipsId` of type `UUID`
  """
  membershipsId: UUID
  """
  ✨ `_expr` server value variant of `membershipsId` (✨ Generated from Field `User`.`membershipsId` of type `UUID`)
  """
  membershipsId_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`memberships` of type `ProjectMembership`
  """
  memberships: ProjectMembership_Key
  """
  ✨ Generated from Field `User`.`createdAt` of type `Date!`
  """
  createdAt: Date
  """
  ✨ `_date` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Date!`)
  """
  createdAt_date: Date_Relative
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Date!`)
  """
  createdAt_expr: Date_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`firstName` of type `String!`
  """
  firstName: String
  """
  ✨ `_expr` server value variant of `firstName` (✨ Generated from Field `User`.`firstName` of type `String!`)
  """
  firstName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`lastLoggedIn` of type `Date`
  """
  lastLoggedIn: Date
  """
  ✨ `_date` server value variant of `lastLoggedIn` (✨ Generated from Field `User`.`lastLoggedIn` of type `Date`)
  """
  lastLoggedIn_date: Date_Relative
  """
  ✨ `_expr` server value variant of `lastLoggedIn` (✨ Generated from Field `User`.`lastLoggedIn` of type `Date`)
  """
  lastLoggedIn_expr: Date_Expr
  """
  ✨ Generated from Field `User`.`lastName` of type `String!`
  """
  lastName: String
  """
  ✨ `_expr` server value variant of `lastName` (✨ Generated from Field `User`.`lastName` of type `String!`)
  """
  lastName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`profilePictureUrl` of type `String`
  """
  profilePictureUrl: String
  """
  ✨ `_expr` server value variant of `profilePictureUrl` (✨ Generated from Field `User`.`profilePictureUrl` of type `String`)
  """
  profilePictureUrl_expr: String_Expr
  """
  ✨ Generated from Field `User`.`roles` of type `[String]`
  """
  roles: [String!]
  """
  ✨ Generated from Field `User`.`settings` of type `String`
  """
  settings: String
  """
  ✨ `_expr` server value variant of `settings` (✨ Generated from Field `User`.`settings` of type `String`)
  """
  settings_expr: String_Expr
  """
  ✨ Generated from Field `User`.`updatedAt` of type `Date`
  """
  updatedAt: Date
  """
  ✨ `_date` server value variant of `updatedAt` (✨ Generated from Field `User`.`updatedAt` of type `Date`)
  """
  updatedAt_date: Date_Relative
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `User`.`updatedAt` of type `Date`)
  """
  updatedAt_expr: Date_Expr
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: String_Filter
  """
  ✨ Generated from Field `User`.`membershipsId` of type `UUID`
  """
  membershipsId: UUID_Filter
  """
  ✨ Generated from Field `User`.`memberships` of type `ProjectMembership`
  """
  memberships: ProjectMembership_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Date!`
  """
  createdAt: Date_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`firstName` of type `String!`
  """
  firstName: String_Filter
  """
  ✨ Generated from Field `User`.`lastLoggedIn` of type `Date`
  """
  lastLoggedIn: Date_Filter
  """
  ✨ Generated from Field `User`.`lastName` of type `String!`
  """
  lastName: String_Filter
  """
  ✨ Generated from Field `User`.`profilePictureUrl` of type `String`
  """
  profilePictureUrl: String_Filter
  """
  ✨ Generated from Field `User`.`roles` of type `[String]`
  """
  roles: String_ListFilter
  """
  ✨ Generated from Field `User`.`settings` of type `String`
  """
  settings: String_Filter
  """
  ✨ Generated from Field `User`.`updatedAt` of type `Date`
  """
  updatedAt: Date_Filter
  """
  ✨ Generated from Field `User`.`projectMemberships_on_user` of type `[ProjectMembership!]!`
  """
  projectMemberships_on_user: ProjectMembership_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: String
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `String!`)
  """
  id_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `String!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`membershipsId` of type `UUID`
  """
  membershipsId: OrderDirection
  """
  ✨ Generated from Field `User`.`memberships` of type `ProjectMembership`
  """
  memberships: ProjectMembership_Order
  """
  ✨ Generated from Field `User`.`createdAt` of type `Date!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`firstName` of type `String!`
  """
  firstName: OrderDirection
  """
  ✨ Generated from Field `User`.`lastLoggedIn` of type `Date`
  """
  lastLoggedIn: OrderDirection
  """
  ✨ Generated from Field `User`.`lastName` of type `String!`
  """
  lastName: OrderDirection
  """
  ✨ Generated from Field `User`.`profilePictureUrl` of type `String`
  """
  profilePictureUrl: OrderDirection
  """
  ✨ Generated from Field `User`.`settings` of type `String`
  """
  settings: OrderDirection
  """
  ✨ Generated from Field `User`.`updatedAt` of type `Date`
  """
  updatedAt: OrderDirection
}
